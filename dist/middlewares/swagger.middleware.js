"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSwaggerMiddleware = getSwaggerMiddleware;
exports.sourceFile = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _files = require("../utils/files");

var swaggerUiExpress = require("swagger-ui-express");

var _ = require('lodash');

var sourceFile = {
  openapi: '3.0.1',
  info: {
    title: 'Node-Shop API',
    version: '1.0.0',
    description: ' Node-Shop Express API with autogenerated swagger doc'
  },
  schemes: ["http"],
  consumes: ["application/json"],
  produces: ["application/json"],
  components: {
    securitySchemes: {
      bearerAuth: {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'Bearer'
      }
    }
  },
  security: [{
    bearerAuth: []
  }],
  servers: [{
    url: '/api/'
  }]
};
exports.sourceFile = sourceFile;

function prepareDocs() {
  return new Promise(function (resolve, reject) {
    var docsFolder = '../docs/**';
    var docsFiles = [];
    (0, _files.loadModulesDynamically)(docsFolder, 'docs').then(function (files) {
      files.forEach(function (docFile) {
        try {
          var docs = new docFile.default().getSwaggerSchema();
          docsFiles.push(docs);
        } catch (error) {
          console.log("error swagger middleware ", error);
        }
      });
      var finalDoc = Object.assign({}, _.merge.apply(_, [sourceFile].concat(docsFiles)), {
        components: {
          securitySchemes: {
            bearerAuth: {
              type: 'http',
              scheme: 'bearer',
              bearerFormat: 'Bearer'
            }
          },
          schemas: {}
        }
      });
      resolve(finalDoc);
    }).catch(reject);
  });
}

function getSwaggerMiddleware() {
  return _getSwaggerMiddleware.apply(this, arguments);
}

function _getSwaggerMiddleware() {
  _getSwaggerMiddleware = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee() {
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.t0 = swaggerUiExpress.serve;
            _context.t1 = swaggerUiExpress;
            _context.next = 4;
            return prepareDocs();

          case 4:
            _context.t2 = _context.sent;
            _context.t3 = sourceFile.info.title;
            _context.t4 = _context.t1.setup.call(_context.t1, _context.t2, null, null, null, null, null, _context.t3);
            return _context.abrupt("return", {
              serve: _context.t0,
              setup: _context.t4
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _getSwaggerMiddleware.apply(this, arguments);
}

;