const swaggerUiExpress = require("swagger-ui-express");
const _ = require('lodash')
import { loadModulesDynamically } from "../utils/files";
export const sourceFile = {
        openapi: '3.0.1',
        info: {
            title: 'Node-Shop API',
            version: '1.0.0',
            description: ' Node-Shop Express API with autogenerated swagger doc',
        },
        schemes: ["http"],
        consumes: ["application/json"],
        produces: ["application/json"],
        components: {
            securitySchemes: {
                bearerAuth: {
                    type: 'http',
                    scheme: 'bearer',
                    bearerFormat: 'Bearer'
                }
            }
        },
        security: [
            {
                bearerAuth: []
            }
        ],
        servers: [{
            url: '/api/'
        }],

    

};


function prepareDocs() {
    return new Promise((resolve, reject) => {
        const docsFolder = '../docs/**';
        const docsFiles = [];
        loadModulesDynamically(docsFolder, 'docs')
            .then((files) => {
                files.forEach((docFile) => {
                    try {
                        const docs = new docFile.default().getSwaggerSchema();
                        docsFiles.push(docs);
                    }
                    catch (error) {
                        console.log("error swagger middleware ", error);
                     }
                });
                const finalDoc = Object.assign({}, _.merge(sourceFile, ...docsFiles), {
                    components: {
                        securitySchemes: {
                            bearerAuth: {
                                type: 'http',
                                scheme: 'bearer',
                                bearerFormat: 'Bearer'
                            }
                        },
                        schemas: {}
                    }
                });
                resolve(finalDoc);
            })
            .catch(reject);
    });
}

export async function getSwaggerMiddleware() {
    return {
        serve: swaggerUiExpress.serve,
        setup: swaggerUiExpress.setup(await prepareDocs(), null, null, null, null, null, sourceFile.info.title)
    };
};